import java.util.List;
import javax.swing.*;
import com.mycompany.guicliente.GUIClass;
import com.mycompany.guicliente.VideoStreamingGUI;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GUI extends javax.swing.JFrame {
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        grabarCheckBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (grabarCheckBox.isSelected()) {
                    // El botón está marcado, pide el nombre del archivo
                    String nombreArchivo = JOptionPane.showInputDialog(frame, "Nombre del archivo:");
                    if (nombreArchivo != null && !nombreArchivo.isEmpty()) {
                        // Envía el comando "grabar" + nombreArchivo
                        mandarComandoYActualizar("grabar " + nombreArchivo + "\n");
                        isGrabarActivated = true;
                    } else {
                        // Si el usuario no ingresó un nombre, desmarca el botón
                        grabarCheckBox.setSelected(false);
                    }
                } else {
                    // El botón está desmarcado, envía el comando "grabar" sin nombre
                    if (isGrabarActivated) {
                        mandarComandoYActualizar("grabar off\n");
                        isGrabarActivated = false;
                    }
                }
            }
        });
        cargarBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Muestra el mismo diálogo al presionar "Cargar"
                    String nombreArchivo = JOptionPane.showInputDialog(frame, "Nombre del archivo:");
                    if (nombreArchivo != null && !nombreArchivo.isEmpty()) {
                        // Envía el comando "grabar" + nombreArchivo
                        mandarComandoYActualizar("cargar " + nombreArchivo + "\n");
            }
            }
        });
        
        reiniciarBtn.setEnabled(false);
        enviarUsuario.setEnabled(false);
        apellidoField.setEnabled(false);
        nombreField.setEnabled(false);
        activarMotores.setEnabled(false);
        desactivarMotores.setEnabled(false);
        conectarRobotbtn.setEnabled(false);
        desconectarRobotbtn.setEnabled(false);
        seleccionarModoBox.setEnabled(false);
        posicionActualBtn.setEnabled(false);
        homeBtn.setEnabled(false);
        movLinealBtn.setEnabled(false);
        xPosTextField.setEnabled(false);
        yPosTextField.setEnabled(false);
        zPosTextField.setEnabled(false);
        velocidadTextField.setEnabled(false);
        efectorActivadoBtn.setEnabled(false);
        efectorDesactivadoBtn.setEnabled(false);
        grabarCheckBox.setEnabled(false);
        cargarBtn.setEnabled(false);
        gCodeTextField.setEnabled(false);
        enviarGCodeBtn.setEnabled(false);
        listarBtn.setEnabled(false);
        logServidorBtn.setEnabled(false);
        reporteGeneralBtn.setEnabled(false);
        gui = new GUIClass(); // Initialize the GUI class

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ipIngresar = new javax.swing.JTextField();
        portIngresar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lanzarPrograma = new javax.swing.JButton();
        apellidoField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enviarUsuario = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nombreField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        conectarRobotbtn = new javax.swing.JButton();
        desconectarRobotbtn = new javax.swing.JButton();
        desactivarMotores = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        activarMotores = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        efectorActivadoBtn = new javax.swing.JButton();
        efectorDesactivadoBtn = new javax.swing.JButton();
        homeBtn = new javax.swing.JButton();
        posicionActualBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        movLinealBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        xPosTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        seleccionarModoBox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        yPosTextField = new javax.swing.JTextField();
        zPosTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        velocidadTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        grabarCheckBox = new javax.swing.JCheckBox();
        cargarBtn = new javax.swing.JButton();
        listarBtn = new javax.swing.JButton();
        logServidorBtn = new javax.swing.JButton();
        reporteGeneralBtn = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        limpiarTextAreaBtn = new javax.swing.JButton();
        gCodeTextField = new javax.swing.JTextField();
        enviarGCodeBtn = new javax.swing.JButton();
        reiniciarBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cliente GUI");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("IP");

        jLabel2.setText("Puerto");

        lanzarPrograma.setText("Lanzar");
        lanzarPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lanzarProgramaActionPerformed(evt);
            }
        });

        jLabel3.setText("Apellido");

        enviarUsuario.setText("Enviar");
        enviarUsuario.setRolloverEnabled(false);
        enviarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarUsuarioActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Launch");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enviarUsuario)
                            .addComponent(ipIngresar)
                            .addComponent(lanzarPrograma)
                            .addComponent(apellidoField)
                            .addComponent(nombreField)
                            .addComponent(portIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lanzarPrograma)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(enviarUsuario)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jLabel6.setText("Conexion");

        conectarRobotbtn.setText("Conectar Robot");
        conectarRobotbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectarRobotbtnActionPerformed(evt);
            }
        });

        desconectarRobotbtn.setText("Desconectar Robot");
        desconectarRobotbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desconectarRobotbtnActionPerformed(evt);
            }
        });

        desactivarMotores.setText("Desactivado");
        desactivarMotores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desactivarMotoresActionPerformed(evt);
            }
        });

        jLabel5.setText("Motores");

        activarMotores.setText("Activado");
        activarMotores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activarMotoresActionPerformed(evt);
            }
        });

        jLabel8.setText("Posicion");

        jLabel9.setText("Efector");

        efectorActivadoBtn.setText("Activado");
        efectorActivadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efectorActivadoBtnActionPerformed(evt);
            }
        });

        efectorDesactivadoBtn.setText("Desactivado");
        efectorDesactivadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efectorDesactivadoBtnActionPerformed(evt);
            }
        });

        homeBtn.setText("Reiniciar Posicion");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        posicionActualBtn.setText("Mostrar Posicion Actual");
        posicionActualBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posicionActualBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desconectarRobotbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(conectarRobotbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(homeBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(posicionActualBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(activarMotores)
                            .addComponent(jLabel5)
                            .addComponent(desactivarMotores))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(efectorDesactivadoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9)
                            .addComponent(efectorActivadoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 47, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activarMotores)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(conectarRobotbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(desconectarRobotbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(desactivarMotores))))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(posicionActualBtn))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(8, 8, 8)
                        .addComponent(efectorActivadoBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(efectorDesactivadoBtn)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        movLinealBtn.setText("Mover");
        movLinealBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movLinealBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Mover Brazo");

        jLabel7.setText("Coordenadas");

        seleccionarModoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Relativas", "Absolutas" }));
        seleccionarModoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarModoBoxActionPerformed(evt);
            }
        });

        jLabel11.setText("X");

        jLabel12.setText("Y");

        jLabel13.setText("Z");

        jLabel14.setText("E");

        jLabel15.setText("Grabar y guardar comandos en el servidor");

        grabarCheckBox.setText("Grabar");
        grabarCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grabarCheckBoxActionPerformed(evt);
            }
        });

        cargarBtn.setText("Cargar");
        cargarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarBtnActionPerformed(evt);
            }
        });

        listarBtn.setText("Listar archivos Job");
        listarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarBtnActionPerformed(evt);
            }
        });

        logServidorBtn.setText("Obtener log del servidor");
        logServidorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logServidorBtnActionPerformed(evt);
            }
        });

        reporteGeneralBtn.setText("Reporte General");
        reporteGeneralBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteGeneralBtnActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("Información");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logServidorBtn)
                            .addComponent(jLabel7)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(grabarCheckBox)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(xPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(yPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(zPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(velocidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(movLinealBtn))
                            .addComponent(seleccionarModoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cargarBtn)
                                .addGap(7, 7, 7)
                                .addComponent(listarBtn))
                            .addComponent(reporteGeneralBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))))
                .addContainerGap(249, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movLinealBtn)
                    .addComponent(xPosTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(yPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(zPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(velocidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seleccionarModoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grabarCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargarBtn)
                    .addComponent(listarBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logServidorBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reporteGeneralBtn)
                .addGap(19, 19, 19))
        );

        limpiarTextAreaBtn.setText("Limpiar");
        limpiarTextAreaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarTextAreaBtnActionPerformed(evt);
            }
        });

        enviarGCodeBtn.setText("Enviar Gcode");
        enviarGCodeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarGCodeBtnActionPerformed(evt);
            }
        });

        reiniciarBtn.setText("Reiniciar");
        reiniciarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enviarGCodeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(limpiarTextAreaBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reiniciarBtn)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enviarGCodeBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(limpiarTextAreaBtn)
                            .addComponent(reiniciarBtn))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enviarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarUsuarioActionPerformed
        String apellidoInput = apellidoField.getText();
        String nombreInput = nombreField.getText();
        if (apellidoInput.isEmpty() || nombreInput.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese apellido y nombre.");
            return;
        }
        reiniciarBtn.setEnabled(true);
        activarMotores.setEnabled(true);
        desactivarMotores.setEnabled(true);
        apellidoField.setEnabled(false);
        nombreField.setEnabled(false);
        enviarUsuario.setEnabled(false);
        conectarRobotbtn.setEnabled(true);
        seleccionarModoBox.setEnabled(true);
        posicionActualBtn.setEnabled(true);
        homeBtn.setEnabled(true);
        efectorActivadoBtn.setEnabled(true);
        efectorDesactivadoBtn.setEnabled(true);
        grabarCheckBox.setEnabled(true);
        cargarBtn.setEnabled(true);
        movLinealBtn.setEnabled(true);
        xPosTextField.setEnabled(true);
        yPosTextField.setEnabled(true);
        zPosTextField.setEnabled(true);
        velocidadTextField.setEnabled(true);
        gCodeTextField.setEnabled(true);
        enviarGCodeBtn.setEnabled(true);
        listarBtn.setEnabled(true);
        logServidorBtn.setEnabled(true);
        reporteGeneralBtn.setEnabled(true);

        String params = apellidoInput + " " + nombreInput + "\n";
        mandarComandoYActualizar(params);
    }//GEN-LAST:event_enviarUsuarioActionPerformed

    private void lanzarProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lanzarProgramaActionPerformed
        String ip = ipIngresar.getText();
        String port = portIngresar.getText();
        if (ip.isEmpty() || port.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese IP y Puerto.");
            return; // Don't proceed if IP or Port is missing
        }
        enviarUsuario.setEnabled(true);
        apellidoField.setEnabled(true);
        nombreField.setEnabled(true);
        ipIngresar.setEnabled(false);
        portIngresar.setEnabled(false);
        lanzarPrograma.setEnabled(false);

        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                gui.runExternalProgram( ip, port,outputTextArea);
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_lanzarProgramaActionPerformed

    private void activarMotoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activarMotoresActionPerformed
        desactivarMotores.setSelected(false);
        mandarComandoYActualizar("motores on\n");
    }//GEN-LAST:event_activarMotoresActionPerformed

    private void desactivarMotoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desactivarMotoresActionPerformed
        activarMotores.setSelected(false);
        mandarComandoYActualizar("motores off\n");
    }//GEN-LAST:event_desactivarMotoresActionPerformed

    private void desconectarRobotbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desconectarRobotbtnActionPerformed
        mandarComandoYActualizar("robot off\n");
    }//GEN-LAST:event_desconectarRobotbtnActionPerformed

    private void conectarRobotbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectarRobotbtnActionPerformed
        desconectarRobotbtn.setEnabled(true);
        String comando = "robot on\n" + "modo r\n" + "estado\n";
        mandarComandoYActualizar(comando);
    
    }//GEN-LAST:event_conectarRobotbtnActionPerformed

    private void seleccionarModoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarModoBoxActionPerformed
        String selectedMode = (String) seleccionarModoBox.getSelectedItem();
        String comando;
        if ("Relativas".equals(selectedMode)) {
            comando = "modo r\n";
            mandarComandoYActualizar(comando);
            
        } else if ("Absolutas".equals(selectedMode)) {
            comando = "modo a\n";
            mandarComandoYActualizar(comando);
        }
        
    }//GEN-LAST:event_seleccionarModoBoxActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        mandarComandoYActualizar("home\n");
    }//GEN-LAST:event_homeBtnActionPerformed

    private void posicionActualBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posicionActualBtnActionPerformed
        mandarComandoYActualizar("estado\n");
    }//GEN-LAST:event_posicionActualBtnActionPerformed

    private void movLinealBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movLinealBtnActionPerformed
        String xPos = xPosTextField.getText();
        String yPos = yPosTextField.getText();
        String zPos = zPosTextField.getText();
        String vel = velocidadTextField.getText();  
        String comandoFinal;
        if (xPos.isEmpty() || yPos.isEmpty() || zPos.isEmpty()){
            JOptionPane.showMessageDialog(this, "Por favor, ingrese coordenada completa");
            return;
        }
        if (vel.isEmpty()){
          comandoFinal = "movLineal " + xPos + " " + yPos + " " + zPos + "\n";  
        } else {
          comandoFinal = "movLineal " + xPos + " " + yPos + " " + zPos + " " + vel + "\n"; 
        }

        mandarComandoYActualizar(comandoFinal);
        
    }//GEN-LAST:event_movLinealBtnActionPerformed

    private void grabarCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grabarCheckBoxActionPerformed
        
    }//GEN-LAST:event_grabarCheckBoxActionPerformed

    private void cargarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargarBtnActionPerformed

    private void efectorDesactivadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efectorDesactivadoBtnActionPerformed
        mandarComandoYActualizar("efector off\n");
    }//GEN-LAST:event_efectorDesactivadoBtnActionPerformed

    private void efectorActivadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efectorActivadoBtnActionPerformed
        mandarComandoYActualizar("efector on\n");
    }//GEN-LAST:event_efectorActivadoBtnActionPerformed

    private void limpiarTextAreaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarTextAreaBtnActionPerformed
         outputTextArea.setText("");
    }//GEN-LAST:event_limpiarTextAreaBtnActionPerformed

    private void listarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarBtnActionPerformed
       mandarComandoYActualizar("listar\n");
    }//GEN-LAST:event_listarBtnActionPerformed

    private void enviarGCodeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarGCodeBtnActionPerformed
        String gCode = gCodeTextField.getText();
        if (gCode.isEmpty()){
            JOptionPane.showMessageDialog(this, "Complete el campo de texto con GCode");
            return;
        }
        mandarComandoYActualizar("ejecutar " + gCode + "\n");
    }//GEN-LAST:event_enviarGCodeBtnActionPerformed

    private void reiniciarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarBtnActionPerformed
        apellidoField.setText("");
        nombreField.setText("");
        ipIngresar.setText("");
        portIngresar.setText("");
        grabarCheckBox.setSelected(false);
        ipIngresar.setEnabled(true);
        portIngresar.setEnabled(true);
        lanzarPrograma.setEnabled(true);
        reiniciarBtn.setEnabled(false);
        enviarUsuario.setEnabled(false);
        apellidoField.setEnabled(false);
        nombreField.setEnabled(false);
        activarMotores.setEnabled(false);
        desactivarMotores.setEnabled(false);
        conectarRobotbtn.setEnabled(false);
        desconectarRobotbtn.setEnabled(false);
        seleccionarModoBox.setEnabled(false);
        posicionActualBtn.setEnabled(false);
        homeBtn.setEnabled(false);
        movLinealBtn.setEnabled(false);
        xPosTextField.setEnabled(false);
        yPosTextField.setEnabled(false);
        zPosTextField.setEnabled(false);
        velocidadTextField.setEnabled(false);
        efectorActivadoBtn.setEnabled(false);
        efectorDesactivadoBtn.setEnabled(false);
        grabarCheckBox.setEnabled(false);
        cargarBtn.setEnabled(false);
        gCodeTextField.setEnabled(false);
        enviarGCodeBtn.setEnabled(false);
        listarBtn.setEnabled(false);
        logServidorBtn.setEnabled(false);
        reporteGeneralBtn.setEnabled(false);
        mandarComandoYActualizar("servidor off\n");
    }//GEN-LAST:event_reiniciarBtnActionPerformed

    private void logServidorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logServidorBtnActionPerformed
        mandarComandoYActualizar("log\n");
    }//GEN-LAST:event_logServidorBtnActionPerformed

    private void reporteGeneralBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteGeneralBtnActionPerformed
        mandarComandoYActualizar("reporte\n");
    }//GEN-LAST:event_reporteGeneralBtnActionPerformed
    private static GUIClass gui;
    private JFrame frame;
    private boolean isGrabarActivated = false;

    private void mandarComandoYActualizar(String command) {
    System.out.println(command);
    SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
        @Override
        protected Void doInBackground() {
            gui.sendCommands(command, outputTextArea);
            //gui.showOutput(output, outputTextArea);
            return null;
        }
    };
    worker.execute();
}    private void closeProgramActionPerformed(java.awt.event.ActionEvent evt) {
        gui.closeProgram();
    }
    
    /**
     * @param args the command line arguments
     */        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            gui.closeProgram();
        }));
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
       //        VideoStreamingGUI videoGUI = new VideoStreamingGUI("http://192.168.100.8:8001");
       //        videoGUI.setVisible(true);
       //        videoGUI.startVideoStream();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton activarMotores;
    private javax.swing.JTextField apellidoField;
    private javax.swing.JButton cargarBtn;
    private javax.swing.JButton conectarRobotbtn;
    private javax.swing.JRadioButton desactivarMotores;
    private javax.swing.JButton desconectarRobotbtn;
    private javax.swing.JButton efectorActivadoBtn;
    private javax.swing.JButton efectorDesactivadoBtn;
    private javax.swing.JButton enviarGCodeBtn;
    private javax.swing.JButton enviarUsuario;
    private javax.swing.JTextField gCodeTextField;
    private javax.swing.JCheckBox grabarCheckBox;
    private javax.swing.JButton homeBtn;
    private javax.swing.JTextField ipIngresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lanzarPrograma;
    private javax.swing.JButton limpiarTextAreaBtn;
    private javax.swing.JButton listarBtn;
    private javax.swing.JButton logServidorBtn;
    private javax.swing.JButton movLinealBtn;
    private javax.swing.JTextField nombreField;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JTextField portIngresar;
    private javax.swing.JButton posicionActualBtn;
    private javax.swing.JButton reiniciarBtn;
    private javax.swing.JButton reporteGeneralBtn;
    private javax.swing.JComboBox<String> seleccionarModoBox;
    private javax.swing.JTextField velocidadTextField;
    private javax.swing.JTextField xPosTextField;
    private javax.swing.JTextField yPosTextField;
    private javax.swing.JTextField zPosTextField;
    // End of variables declaration//GEN-END:variables
}
